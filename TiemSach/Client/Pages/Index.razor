@page "/"
@using TiemSach.Shared
@inject IMenuService MenuService
@inject IOrderService orderService

@if (State.Menu.Sachs.Any()) {
    <!-- Menu -->
<SachList Title="Vui lòng chọn sách"
    Items="@State.Menu.Sachs"
    ButtonTitle="Thêm"
    ButtonClass="btn btn-success pl-4 pr-4"
    Selected="@AddToBasket" />
<!-- End menu -->
<!-- Shopping Basket -->
<ShoppingBasket Orders="@State.Basket.Orders"
    GetSachFromId="@State.Menu.GetSach"
    Selected="@RemoveFromBasket" />
<!-- End shopping basket -->
<!-- Customer entry -->
<CustomerEntry Title="Vui lòng nhập thông tin đầy đủ"
    @bind-Customer="@State.Basket.Customer"
    ButtonTitle="Thanh toán"
    ButtonClass="mx-auto w-25 btn btn-success"
    ValidSubmit="PlaceOrder" />
<!-- End customer entry -->
@*@State.ToJson()*@
}
else {
    <div class="mx-auto text-center mb-3 mt-3">
        <div class="spinner-border text-danger" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}
@code {
    private State State { get; } = new State();

    protected override async Task OnInitializedAsync() {
        Menu menu = await MenuService.GetMenu();
        foreach (Sach sach in menu.Sachs) {
            State.Menu.Add(sach);
        }
    }
    private void AddToBasket(Sach sach)
        => State.Basket.Add(sach.Id);

    private void RemoveFromBasket(int pos)
        => State.Basket.RemoveAt(pos);

    private async Task PlaceOrder() {
        await orderService.PlaceOrder(State.Basket);
    }
}
